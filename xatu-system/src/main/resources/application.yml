#引用注册中心
eureka:
  client:
    register-with-eureka: true #表明将自己注册进EurekaServer
    fetch-registry: true
    service-url:
      defaultZone: http://${eureka_host:localhost}:8901/eureka/
    instance:
      instance-id: xatu-system #注册的服务名称

#服务端口号
server:
  port: 8904

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://121.36.26.106:3306/XATUEduSys?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: 123456
  main:
    allow-bean-definition-overriding: true # 意思是后来发现的bean会覆盖之前相同名称的bean
  #升级 boot 2.0 后返回日期类型指定为时间戳，实体中jsonFormat自由设置格式
  jackson:
    serialization:
      write-dates-as-timestamps: true
  #  profiles:
  #    active: local   #启动默认local的yml配置
  application:
    name: xatu-system  #该模块的名字
    #文件上传设置大小限制
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis本地服务器地址，注意要开启redis服务，即那个redis-server.exe
    host: 121.36.26.106
    # Redis服务器端口,默认为6379.若有改动按改动后的来
    port: 6379
    #Redis服务器连接密码，默认为空，若有设置按设置的来
    password:
    # Redis数据库索引（默认为0）
    database: 1
    jedis:
      pool:
        # 连接池最大连接数，若为负数则表示没有任何限制
        max-active: 8
        # 连接池最大阻塞等待时间，若为负数则表示没有任何限制
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位秒，-1代表永不过期
  timeout: 3600
  # token临时有效期 (指定时间内无操作就视为token过期)，单位秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否从cookie中读取token
  is-read-cookie: true
  # 是否从head中读取token
  is-read-head: true