server:
  port: 8902

spring:
  application:
    name: xatu-gateway
  cloud:
    #配置路由
    gateway:
      #这里可以配置多个路由
      routes:
        - id: system_routh #路由的id
          uri: http://localhost:8904 #匹配后提供服务的路由地址
          predicates:
            - Path=/sys/** #断言 路径相匹配的进行路由
        - id: user_routh #路由的id
          uri: http://localhost:8905 #匹配后提供服务的路由地址
          predicates:
            - Path=/user/** #断言 路径相匹配的进行路由
        - id: course_routh #路由的id
          uri: http://localhost:8906 #匹配后提供服务的路由地址
          predicates:
            - Path=/course/** #断言 路径相匹配的进行路由
        - id: homework_routh #路由的id
          uri: http://localhost:8907 #匹配后提供服务的路由地址
          predicates:
            - Path=/homework/** #断言 路径相匹配的进行路由
        - id: evalution_routh #路由的id
          uri: http://localhost:8908 #匹配后提供服务的路由地址
          predicates:
            - Path=/evalution/** #断言 路径相匹配的进行路由
#        - id: common_routh #路由的id
#          uri: http://localhost:8903 #匹配后提供服务的路由地址
#          predicates:
#            - Path=/test/** #断言 路径相匹配的进行路由
  # 配置业务使用的 Redis 连接
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 121.36.26.106
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间
    timeout: 10s

eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true #表明将自己注册进EurekaServer
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8901/eureka/


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位秒，-1代表永不过期
  timeout: 3600
  # token临时有效期 (指定时间内无操作就视为token过期)，单位秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否从cookie中读取token
  is-read-cookie: true
  # 是否从head中读取token
  is-read-head: true